<?php

namespace App;

use App\Tweets\EntityExtractor;
use App\Tweets\EntityType;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;


class Tweet extends Model
{
    use Likeable, actions;

    protected $guarded = [];


    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function(Tweet $tweet){
            $tweet->entities()->createMany(
                (new EntityExtractor($tweet->body))->getAllEntites()
        );
        });
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function OriginalTweet()
    {
        return $this->hasOne(Tweet::class,  'id', 'original_tweet_id');
    }

    public function media () {
       return  $this->hasMany(TweetMedia::class);
    }

    public function scopeParent(Builder $builder){
        return $builder->whereNull('parent_id');
    }
    public function entities (){
        return $this->hasMany(Entity::class);
    }

    public function mentions(){
        return $this->hasMany(Entity::class)
            ->whereType(EntityType::MENTION);

    }

    public function parents(){
        $base = $this;
        $parents = [];

        while ($base->parentTweet){
            $parents[] = $base->parentTweet;
            $base = $base->parentTweet;
        }
        return collect($parents);
    }

    public function parentTweet(){
        return $this->belongsTo(Tweet::class,'parent_id');
    }



}
